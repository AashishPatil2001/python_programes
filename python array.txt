
# Array in python

''' point

1) array can increase or decrease their size dinamically
2) array can store only one type of data
3) array and list are not same
4) array uses less memory than list'''
5) its follow index

from array import*
a = array('i', [101, 102, 103, 104])
for i in a:
	print(i)
	
#or
import array
a = array.array('i', [101, 102, 103, 104])
for i in a:
	print(i)
	
'''o/p 
101
102
103
104'''

''' type of array 
1) one dimansion array - single row multiple colums
	ex a=([101, 102, 103, 104])
	
2) Multi dimansion array - multiple row multiple colums
	ex a=([101, 102, 103, 104], [105, 106, 107,108])
	note -python not support multi arry use numpy liberay
	
#================================== One dimension array =========================================

import array module in way

1)  import array                its import all array modele

	ex- import array
	    array = array.array('i', [101, 102, 103, 104, 105])
	
2)  from array import*          its use for import all class, object, variable  * mean all

	ex- from array import*
		a = array('f', [101.1, 102.2, 103.0, 10.4])
'''
		
# empty array

from array import*
a = array('i', [])

# Accessing array using for loop

# without index

from array import *
a = array('i', [101, 102, 103, 104])
for i in a:
	print(i, end=' ')
	
# with index

from array import *
a = array('i', [101, 102, 103, 104])
for i in range(len(a)):
	print(a[i], end=' ')

'''o/p 101 102 103 104 '''

# Accessing array using while loop

from array import*
a = array('i', [101, 102, 103, 104, 105])
i = 0
n = len(a)

while i<n:
	print("index", i, '=", a[i])
	i+=1
'''o/p
index 1 = 102
index 2 = 103
index 3 = 104
index 4 = 105'''


#============================ Array method===========================

'''
1) append()       -   add element at the end of array
2) insert()       -   add element in particular position or index
3) pop()          -   remove array last element
4) pop(n)         -   remove element particular position or index
5) remove()       -   remove elemnet without need of index no. direct remove value
6) index()        -   its used for find index position of a specific value
7) reverse()      -   reverse the order of element in the array
8) extend()       -   add another array 

'''

#----------------------------- append() array method-----

from array import*
stu_roll = array('i', [101, 102, 103, 104, 105])
n = len(stu_roll)
i = 0
while(i<n):
	print(stu_roll[i])
	i+=1
print()
print("After apply append methoid")

stu_roll.append(106)     # ***************

n = len(stu_roll)
i = 0
while (i<n):
	print(stu_roll[i])
	i+=1
	
'''0/p

101
102
103
104
105

After apply append methoid
101
102
103
104
105
106'''

# array get input from user   for loop

from array import*
stu_roll = array('i', [])
n = int(input("Enter size of value))

for i in range(n):
	stu_roll.append(int(input("Enter a value")))

for i in range(n):
	print(stu_roll[i])from array import*
stu_roll = array('i', [])
n = int(input("Enter size of value : "))

for i in range(n):
	stu_roll.append(int(input("Enter a value : ")))

for i in range(n):
	print(stu_roll[i])

'''o/p
Enter size of value : 5
Enter a value : 101
Enter a value : 102
Enter a value : 103
Enter a value : 101
Enter a value : 105
101
102
103
101
105'''

# get input from user for while loop

from array import *

stu_roll = array('i', [])
n = int(input("Enter a size of array : "))
i = 0
j=0
while i < n:
	stu_roll.append(int(input("Enter array value ; ")))
	i += 1

while j < n:
	print(stu_roll[j])
	j += 1

'''o/p
Enter a size of array : 5
Enter array value ; 10
Enter array value ; 20
Enter array value ; 30
Enter array value ; 40
Enter array value ; 50
10
20
30
40
50
'''

#------------------------------- insert() array method---------
	
# add element in particular position

from array import *

sturoll = array('i', [101, 102, 103, 104, 105])

n = len(sturoll)

for i in range(n):
	print("index", i, "=", sturoll[i])

print("After apply insert method ")

sturoll.insert(1, 106)  # *********************
sturoll.insert(3, 107)

n = len(sturoll)

for i in range(n):
	print("index", i, "=", sturoll[i])
	
'''index 0 = 101
index 1 = 102
index 2 = 103
index 3 = 104
index 4 = 105
After apply insert method 
index 0 = 101
index 1 = 106
index 2 = 102
index 3 = 107
index 4 = 103
index 5 = 104
index 6 = 105'''

#--------------------------------------- pop() array method---------------

# remove array last element

from array import *

sturoll = array('i', [101, 102, 103, 104, 105])

for i in range(len(sturoll)):
    print("index", i, "=", sturoll[i])

print("After apply pop method")

sturoll.pop()                                 #*********************************

for i in range(len(sturoll)):
    print("index", i, "=", sturoll[i])
	
'''o/p
index 0 = 101
index 1 = 102
index 2 = 103
index 3 = 104
index 4 = 105
After apply pop method
index 0 = 101
index 1 = 102
index 2 = 103
index 3 = 104'''

#------------------------- pop(n) array method----------------------------
	
#remove element particular position or index



from array import*
sturoll = array('i', [101, 102, 103, 104, 105])
n = len(sturoll)
i = 0
while (i<n):
	print("index", i, "=", sturoll[i])
	i+=1
print("After apply pop(n)method")

r = sturoll.pop(1)
n = len(sturoll)
i = 0
while(i<n):
	print("index", i, "=", sturoll[i])
	i+=1

print("Remove element is ", r)

'''
index 0 = 101
index 1 = 102
index 2 = 103
index 3 = 104
index 4 = 105
After apply pop(n)method
index 0 = 101
index 1 = 103
index 2 = 104
index 3 = 105
Remove element is  102'''

#------------------------------ remove()   array method---------------

# remove elemnet without need of index no. direct remove value

from array import*
sturoll = array('i', [10, 20, 30, 40, 50])
for i in range(len(sturoll)):
	print("without index", sturoll[i])
	
sturoll.remove(30)                #**********************

print("After apply remove method")
for i in range(len(sturoll)):
	print("without index", sturoll[i])

'''
without index 10
without index 20
without index 30
without index 40
without index 50
After apply remove method
without index 10
without index 20
without index 40
without index 50
'''


# --------------------------- index() array method--------------------------------

# its used for find index position of a specific value

from array import*
sturoll = array('i', [101, 102, 103, 104, 105])
a = sturoll.index(103)
print(a)

''' o/p   2


#-------------------------------- reverse() array method -------------------------

# reverse the order of element in the array

from array import*

sturoll = array('i', [101, 102, 103, 104, 105])

for i in range(len(sturoll)):
    print("index ", i,  "=",  sturoll[i])

sturoll.reverse()  # *************************

print("After apply revers method ")

for i in range(len(sturoll)):
    print("index ", i,  "=",  sturoll[i])

'''o/p
index  0 = 101
index  1 = 102
index  2 = 103
index  3 = 104
index  4 = 105
After apply revers method 
index  0 = 105
index  1 = 104
index  2 = 103
index  3 = 102
index  4 = 101'''

#--------------------------------------- extend() -------------------------------

#   add another array 

import array
stu_roll = array.array('i', [101, 102, 103, 104, 105])
arr = array.array('i', [106, 107, 108, 109])

n = len(stu_roll)
i = 0

while i < n:
    print("index", i, "=", stu_roll[i])
    i += 1

print("After apply extend method")

stu_roll.extend(arr)  # ************************

n = len(stu_roll)
i = 0

while i < n:
    print("index", i, "=", stu_roll[i])
    i += 1

'''o/p
index 0 = 101
index 1 = 102
index 2 = 103
index 3 = 104
index 4 = 105
After apply extend method
index 0 = 101
index 1 = 102
index 2 = 103
index 3 = 104
index 4 = 105
index 5 = 106
index 6 = 107
index 7 = 108
index 8 = 109'''

#==================================== Slicing on array =========================================

# its used for assign specfic element in new array
from array import*

sturoll = array('i', [101, 102, 103, 104, 105, 106, 107])

for i in range(len(sturoll)):
    print("index", i, "=", sturoll[i])

print("Afetr apply slicing")

s = sturoll[1:5]                        #*************************************************

for i in range(len(s)):
    print("index", i, "=", s[i])

'''o/p
index 0 = 101
index 1 = 102
index 2 = 103
index 3 = 104
index 4 = 105
index 5 = 106
index 6 = 107
Afetr apply slicing
index 0 = 102
index 1 = 103
index 2 = 104
index 3 = 105'''

from array import*

sturoll = array('i', [101, 102, 103, 104, 105, 106, 107])

for i in range(len(sturoll)):
    print("index", i, "=", sturoll[i])

print("Afetr apply slicing")

s = sturoll[-5:3]

for i in range(len(s)):
    print("index", i, "=", s[i])

'''o/p
index 0 = 101
index 1 = 102
index 2 = 103
index 3 = 104
index 4 = 105
index 5 = 106
index 6 = 107
Afetr apply slicing
index 0 = 103'''

from array import*
sturoll = array('i', [101, 102, 103, 104, 105, 106, 107])
a = sturoll[0:7:2]

for i in a:
	print(i)

'''o/p
101
103
105
107'''


'''===============================================================================================
==============================================================================================='''

######################################## Numpy library #########################################

''' 
1) Numpy is a package which contain classes, function, variable, large liberary
2) used for create dimensional array
3) can create one dimension and multi dimension array

import numpy
array_name = numpy.array([element])

from numpy import*
array_name = array([element])


# one dimension numpy array function/module

1) array()       -   function of numpy module is using to create an array
3) linspace()    -   linspace() function i used to create an array with evenly spaced number between a start sytax  line-562
5) logspace()    -   logspace() is used to create an array with evently spaced no. logarithmically.
2) arange()      -   its work like range()
4) zeroes()      -   zero() function is used to create an array with all zero  line-667
6) ones()        -   one () function is used to create an array with all zero
'''



'''

#---------------------------------- array()  numpy funtion -------------------------------------

''' function of numpy module is using to create an array

import numpy
stu_roll = numpy.array([101, 102, 103, 104])      #([101, 102, 103, 104], int)

name = numpy.array(["Aashish", "Durgesh", "ritik"])   #(["Aashish", "Durgesh", "ritik"], dtype=str)
'''

from numpy import*

stu_roll = array([101, 102, 103, 104, 105], dtype=float)

print(stu_roll)
print(stu_roll.dtype)
print(stu_roll[1])
print(stu_roll[3])

stu_roll[3]=106

print(stu_roll)
print(stu_roll.dtype)
print(stu_roll[1])
print(stu_roll[3])

'''o\p
[101. 102. 103. 104. 105.]
float64
102.0
104.0
[101. 102. 103. 106. 105.]
float64
102.0
106.0'''


#---------------------------------------- linspace() numpy function --------------------------

''' linspace() function i used to create an array with evenly spaced number between a start sytax

numpy.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None, axis=0)

num= no. part the element should be divide. default its 50

endpoint= its True, stop is the last element . its False, stop is not include

from numpy import*
a = linspace(1, 8, num=5)
print(a)

''' [1.   2.75 4.5  6.25 8.  ] '''

import numpy
a = numpy.linspace(1, 8, 5)
print(a)

''' [1.   2.75 4.5  6.25 8.  ] '''

import numpy
a = numpy.linspace(1, 8, 5, endpoint=False)
print(a)

'''  [1.  2.4 3.8 5.2 6.6] '''

from numpy import*
a = linspace(1, 8)
print(a)

''' [1.         1.14285714 1.28571429 1.42857143 1.57142857 1.71428571
 1.85714286 2.         2.14285714 2.28571429 2.42857143 2.57142857
 2.71428571 2.85714286 3.         3.14285714 3.28571429 3.42857143
 3.57142857 3.71428571 3.85714286 4.         4.14285714 4.28571429
 4.42857143 4.57142857 4.71428571 4.85714286 5.         5.14285714
 5.28571429 5.42857143 5.57142857 5.71428571 5.85714286 6.
 6.14285714 6.28571429 6.42857143 6.57142857 6.71428571 6.85714286
 7.         7.14285714 7.28571429 7.42857143 7.57142857 7.71428571
 7.85714286 8.        ]'''
 
 from numpy import*
 a = linspace(1, 8, 5)
 print(a[0])

''' 1.0  '''


#---------------------------------- logspace() numpy function ----------------------------------

''' logspace() is used to create an array with evently spaced no. logarithmically.
	the squence start at base ** start(base to the power of start) and with base ** stop.

numpy.linspace(start, stop, num=50, endpoint=True, *****base=10.0 *****, dtype=None, axis=0)

num= no. part the element should be divide. default its 50

endpoint= its True, stop is the last element . its False, stop is not include

base = the base of the log space. its by default 10 '''

from numpy import*

a = logspace(1, 3)
print("a value", a)

''' a value [  10.           10.98541142   12.06792641   13.25711366   14.56348478
   15.9985872    17.57510625   19.30697729   21.20950888   23.29951811
   25.59547923   28.11768698   30.88843596   33.93221772   37.2759372
   40.94915062   44.98432669   49.41713361   54.28675439   59.63623317
   65.51285569   71.9685673    79.06043211   86.85113738   95.40954763
  104.81131342  115.13953993  126.48552169  138.94954944  152.64179672
  167.68329368  184.20699693  202.35896477  222.29964825  244.20530945
  268.26957953  294.70517026  323.74575428  355.64803062  390.69399371
  429.19342601  471.48663635  517.94746792  568.9866029   625.05519253
  686.648845    754.31200634  828.64277285  910.29817799 1000.        ]'''

b = logspace(1, 3, 5)
print("b value", b)

''' b value [  10.           31.6227766   100.          316.22776602 1000.        ]'''

c = logspace(1, 3, 5, base=12.0)
print("c value", c)

'''c value [  12.           24.40724412   49.64279712  100.97032233  205.36727547
  417.70410218  849.58383258 1728.        ]'''
  
#--------------------------------- arange() numpy function ----------------------------------

''' arange() function is used to create an a array of group of element from start to one element prior to 
   step in step of step size
   
   numpy.arange(start, stop, stepsize, dtype=None)
   
 stepsize = spacing between value, the default step size is 1
 '''
 
from numpy import*
a = arange(1, 10, 2)
print(a)

''' [1 3 5 7 9] '''

#-------------------------------- zeroes() numpy function --------------------------------------

''' zero() function is used to create an array with all zero

	numpy.zero(shape, ddtype=float, order='c')
	
	shope = shape of array. its can be an nt which will represent no of element or can be tuple of 
	         int ex 5,(5, 1)
			 
	order = c-column, r-row
			whether to store multi-demension data row-major (c-style) or column-major(f-style) order
			in memory. its can be c or f'''
			
from numpy import*
a = zeroes(5)
print(a)

''' [0. 0. 0. 0. 0.] '''

b = zeroes(6, dtpye=int)
print(b)

''' [0 0 0 0 0 0] '''

c = zeroes((3, 2))
print(c)
	
'''
[[0. 0.]
 [0. 0.]
 [0. 0.]]'''	



#-------------------------------- ones() numpy function --------------------------------------

''' ones() function is used to create an array with all ones

	numpy.zero(shape, ddtype=float, order='c')
	
	shope = shape of array. its can be an nt which will represent no of element or can be tuple of 
	         int ex 5,(5, 1)
			 
	order = c-column, r-row
			whether to store multi-demension data row-major (c-style) or column-major(f-style) order
			in memory. its can be c or f'''


from numpy import *

a = ones(5)
print(a)

''' [1. 1. 1. 1. 1.] '''

b = ones(6, dtpye=int)
print(b)

''' [1 1 1 1 1 1] '''

c = ones((3, 2))
print(c)

'''
[[1. 1.]
 [1.1.]
 [1. 1.]]'''	

'''=============================================================================================
============================================================================================='''

#------------------------------------------Mathematical Operation ------------------------------

from array import*

a = array([101, 102, 103, 104, 105])
a = a+5
print(a)

'''[106 107 108 109 110]'''

a = array([101, 102, 103, 104, 105])
b = array([10, 20, 30, 40, 50])

c = a+b
print(c)

''' [111 122 133 144 155] '''

#======================================== Relation/comparism operetor for numpy ===============

from numpy import*

a = array([100, 200, 300, 400, 500])
b = array([100, 20, 30, 400, 50])

result=a==b
print(result)

''' [ True False False  True False] '''

from numpy import*

a =array([100, 2, 300, 4, 500])
b =array([100, 20, 30, 400, 500])

result=a<b
print(result)

'''[False  True False  True False]'''


'''===================================Any() and all() function ======================================
============================================================================================='''

# any() = this function return True, if any one element of the iterable is true, if iterable in empy the return false

from numpy import*

a = array([100, 200, 300, 400, 500])
b = array([100, 20, 30, 400, 50])
result = a==b

print(any(result))

#     true


from numpy import*

a = array([100, 200, 300, 400, 500])
b = array([10, 20, 30, 40, 50])
result = a==b

print(any(result))

# false

#----------------------------all() function ----------------------------------

''' this function return True, if all element the iterable ara true or iterable is empy '''

from array import*

a = array([100, 200, 300, 400, 500])
b = array([100, 20, 30, 400, 50])
c = a==b
print(all(c))

# false

from array import*

a = array([100, 200, 300, 400, 500])
b = array([100, 200, 300, 400, 500])
c = a==b
print(all(c))

# true

#========================================== where() function od numpy ==========================

''' this function is used to create a new array which contain, return element chosen from expression
, or expresssion 2 deponding on conditiion. if condition is True expression is excecuted else expression 2'''

from numpy import*
a = array([100, 200, 300, 400, 500])
b = array([100, 20, 30, 400, 50])

result = where(a>b, a,b)                      #*******************************
print(result)

''' [100 200 300 400 500] '''

from numpy import*
a = array([101, 12, 300, 4, 500])
b = array([100, 20, 30, 400, 52])
result = where(a<b, a, b)
print(result)

''' [100  12  30   4  52] '''

#------------------------- non zero() function -------------------------------------

''' this function i used to determine the position of element which one non zero. this functionreturn an array that constain the
index of the element of the array which ara not equal to zero '''

from numpy import*
a = array([100, 200, 13, 0, 400, 500, 0])
result = nonzero(a)                            #***************************
print(result)

''' (array([0, 1, 2, 4, 5], dtype=int64),) '''

#------------------------------ Aliasing array ----------------------------------------

''' Alising array giving another name to the exiting object. *****it does't mean copy****
    because in python address assign on value not on variable'''

from numpy import*
a = array([10, 20, 30, 40, 52])
b = a
print(a)
print("address = ", id(a))
print(b)
print("address = ", id(b))


'''
[10 20 30 40 52]
address =  2692490016208
[10 20 30 40 52]
address =  2692490016208'''


#------------------------------------------ view() method-------------------------

''' this method is used to construc













